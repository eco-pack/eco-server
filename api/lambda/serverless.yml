service: eco-server

provider:
  name: aws
  runtime: nodejs12.x
  profile: default
  region: eu-west-2
  environment:
    DYNAMODB_NAMESPACE: ${opt:stage, "dev"}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

custom:
  serverless-offline:
    dontPrintOutput: true
  dynamodb:
    stages:
      - dev

functions:
  packages:
    handler: src/Packages/api.handler
    events:
      - http:
          integration: lambda-proxy
          path: /{proxy+}
          method: ANY

resources:
  Resources:

    ElmSeqDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: label
            AttributeType: S
        KeySchema:
          -
            AttributeName: label
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_NAMESPACE}-eco-elm-seq

    ElmPackagesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: name
            AttributeType: S
        KeySchema:
          -
            AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_NAMESPACE}-eco-elm-packages
